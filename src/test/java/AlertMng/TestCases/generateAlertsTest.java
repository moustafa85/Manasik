package AlertMng.TestCases;

import AlertMng.Pages.actions.AlertMngBasePage;
import Database.Testcases.LastAlertQueryTest;
import HealthVitals.Pages.AlertWindowPage;
import Pages.Testrail.testrail;
import Pages.base.BasePage;
import Pages.utils.GenerateAlerts;
import Pages.utils.TestUtils;
import login.Pages.LoginPage;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class generateAlertsTest extends BasePage {
        LoginPage loginPage;
        TestUtils utilswrite;
        GenerateAlerts alerts;
        AlertWindowPage alertWindowPage;
        AlertMngBasePage AlertBasePage;
        public int DataSet = -1;



    public generateAlertsTest() throws IOException {
        super();

    }

    @BeforeMethod
        public void setUp() throws IOException, InterruptedException {

            loginPage = new LoginPage();
            utilswrite = new TestUtils();
            alerts = new GenerateAlerts();
            alertWindowPage = new AlertWindowPage();
            AlertBasePage = new AlertMngBasePage();


        }

        @DataProvider
        public Object[][] getExcelData() throws IOException, InvalidFormatException {
            Object data[][] = TestUtils.dataSupplier("GenerateAlerts", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
            return data;
        }

    /**
     * Read Data from Excel sheet and generate alerts using RESTAssure and Validate alert is generated by
     * 1. alert pop up window displayed
     * 2. OR Retrieve the alert ID from DB
     * @throws InterruptedException
     * @throws IOException
     * @throws SQLException
     * @throws ClassNotFoundException
     */
        @testrail(id = "17362")
        @Test(dataProvider="getExcelData",groups={"generateAlerts"})
        public void GenerateAlert(Map<String, String> map)throws InterruptedException, IOException, SQLException, ClassNotFoundException {
            DataSet++;
            test = extent.createTest("Alert Management -- Send Alert");
            test.assignCategory("Alert Management");
            //Validate Generate the alert using API
            if(alerts.generateGeofenceAlert(map.get("deviceID"),map.get("lat"),map.get("lon"))){
                test.pass("Send api request GPS Alert ");
                //Validate alert pop up in enabled
                if (alertWindowPage.VerifyAlertWindowDisplayed()){
                    test.pass(" Alert is displayed");
                    //Retrieve alert ID from alert window
                    String alertID = alertWindowPage.getAlertID_type().replaceAll("[^0-9]", "");
                    //Write alerts IDs in the Excel sheets to use it for another functionalities
                    utilswrite.WriteInExcel(alertID, DataSet+1, "GenerateAlerts","AlertId", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
                    utilswrite.WriteInExcel(alertID, DataSet+1, "OpenAssignUser","AlertId", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
                    utilswrite.WriteInExcel(alertID, DataSet+1, "OpenReassignUser","AlertId", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
                    utilswrite.WriteInExcel(alertID, DataSet+1, "ResolveAlert","AlertId", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
                    //Click View details
                    alertWindowPage.ViewAlertDetails();
                    test.pass("Alert "+alertID+" : Details is displayed");
                } else {
                    //If alert window is not enabled retrieve alert ID from DB
                    test.fail("Alert is not displayed");
                    String alertID = LastAlertQueryTest.CheckCreatedIncident(map.get("TypeID"));
                    test.pass("Retrieve alert ID from DB query : "+alertID);
                    //Write alerts IDs in the Excel sheets to use it for another functionalities
                    utilswrite.WriteInExcel(alertID, DataSet+1, "GenerateAlerts","AlertId", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
                    utilswrite.WriteInExcel(alertID, DataSet+1, "OpenAssignUser","AlertId", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
                    utilswrite.WriteInExcel(alertID, DataSet+1, "OpenReassignUser","AlertId", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
                    utilswrite.WriteInExcel(alertID, DataSet+1, "ResolveAlert","AlertId", System.getProperty("user.dir")+"\\"+prop.getProperty("Environment")+prop.getProperty("AlertMngFile"));
                }
            }else {
                test.fail("Send api request to generate Alert is failed");
                Assert.fail("Send api request to generate Alert is failed");
            }




        }

        @testrail(id = "16667")
        @Test(dataProvider = "getExcelData",priority = 1)
        public void ValidateDashboardAlertGrid(Map<String, String> map) throws InterruptedException {
            DataSet++;
            test = extent.createTest("Dashboard -- Validate Alert : "+map.get("AlertId")+" displayed in dashboard grid ");
            test.assignCategory("Dashboard");
            if (!loginPage.dashboardLink()){
                test.fail("User Not Navigated to Dashbord Page");
                Assert.fail("User Not Navigated to Dashbord Page");
            }
            test.pass("User Navigated to Dashbord Page");

            test.pass("Filter Site : "+map.get("Site")+" alert");

            if (true) {
                test.pass("Click Alert: " + map.get("AlertId"));
                Set<String> handlesSet = driver.getWindowHandles();
                List<String> handlesList = new ArrayList<String>(handlesSet);
                driver.switchTo().window(handlesList.get(1));
                test.pass("Switch to the new tab ");
                Assert.assertTrue(AlertBasePage.getAlertDetailsPageTitle().contains(map.get("AlertId")));
                test.pass("Alert #" + map.get("AlertId") + " : Details is displayed");
                driver.close();
                driver.switchTo().window(handlesList.get(0));
            }
            else
                test.fail("Alert: " + map.get("AlertId")+" is not displayed in Dashboard Alert grid");

        }

        }

